import"./assets/main-DD3a1hQm.js";const s=document.querySelector(".js-whatsapp-icon"),c=new URLSearchParams(window.location.search),i=c.get("id"),l=()=>{console.log("Ha hecho click en icono whatsapp");const e=`Comparto con ustedes mi tarjeta CV personalizada: ${`https://lauramartinezperez.github.io/My-Application-Card/card.html?id=${i}`}`,a=`https://api.whatsapp.com/send?text=${encodeURIComponent(e)}`;window.open(a,"_blank")};s.addEventListener("click",l);const d=document.querySelector(".js__profile-preview"),p=document.querySelector(".js_preview_profileName"),m=document.querySelector(".js_preview_city"),u=document.querySelector(".js_preview_email"),h=document.querySelector(".js_preview_training"),g=document.querySelector(".js_preview_skills"),w=document.querySelector(".js_preview_motivation"),f=document.querySelector(".js_preview_technologies"),_=document.querySelector(".js_preview_linkedin"),r=document.querySelector(".js-bg-preview");document.querySelectorAll(".js_collapsable_header");document.querySelector(".js_share_collapsable");document.querySelector(".js-share-icons");const n=document.querySelector(".js-backLink"),y=new URLSearchParams(window.location.search),o=y.get("id");console.log(o);o&&fetch(`https://dev.adalab.es/api/info/${o}`).then(t=>t.json()).then(t=>{const e=t.data;p.innerText=e.field2,m.innerText=e.field3,u.innerText=e.field4,h.innerText=e.field5,g.innerText=e.field6,f.innerText=e.field7,_.innerText=e.field8,w.innerText=e.field9,d.src=e.photo,e.field1===1?(r.classList.add("bg-grey"),r.classList.remove("bg-orange","bg-green")):e.field1===2?(r.classList.add("bg-orange"),r.classList.remove("bg-grey","bg-green")):e.field1===3&&(r.classList.add("bg-green"),r.classList.remove("bg-grey","bg-orange")),n.href=`./forms.html?cardId=${o}`}).catch(t=>console.error("Error al recuperar tarjeta:",t));n.href="./forms.html";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
