const o=document.querySelector(".js__profile-preview"),c=document.querySelector(".js_preview_profileName"),s=document.querySelector(".js_preview_city"),a=document.querySelector(".js_preview_email"),l=document.querySelector(".js_preview_training"),d=document.querySelector(".js_preview_skills"),f=document.querySelector(".js_preview_motivation"),m=document.querySelector(".js_preview_technologies"),u=document.querySelector(".js_preview_linkedin"),t=document.querySelector(".js-bg-preview"),i=document.querySelector(".js-backLink"),g=new URLSearchParams(window.location.search),n=g.get("id");n?fetch(`https://dev.adalab.es/api/info/${n}`).then(r=>r.json()).then(r=>{const e=r.data;c.innerText=e.field2,s.innerText=e.field3,a.innerText=e.field4,l.innerText=e.field5,d.innerText=e.field6,m.innerText=e.field7,u.innerText=e.field8,f.innerText=e.field9,o.src=e.photo,t.classList.remove("bg-grey","bg-orange","bg-green"),e.field1===1?t.classList.add("bg-grey"):e.field1===2?t.classList.add("bg-orange"):e.field1===3&&t.classList.add("bg-green"),i&&(i.href=`./forms.html?cardId=${n}`)}).catch(r=>console.error("Error al recuperar tarjeta:",r)):i&&(i.href="./forms.html");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
